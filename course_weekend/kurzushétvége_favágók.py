# -*- coding: utf-8 -*-
"""Kurzushétvége.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kKDPgfGrJx0swlPPcQEU_6se-o8as9sg
"""

import json

path_to_file1 = 'data/2010-msg.json'
path_to_file2 = 'data/2011-msg.json'
path_to_file3= 'data/2012-msg.json'
path_to_file4 = 'data/2013-msg.json'
path_to_file5= 'data/2014-msg.json'
path_to_file6 = 'data/2015-msg.json'
path_to_file7 = 'data/2016-msg.json'
path_to_file8 = 'data/2017-msg.json'
path_to_file9 = 'data/2018-msg.json'
path_to_file10 = 'data/2019-msg.json'
path_to_file11 = 'data/2020-msg.json'

list_of_dicts_2010 = json.load(open(path_to_file1,'r'))
list_of_dicts_2011 = json.load(open(path_to_file2,'r'))
list_of_dicts_2012 = json.load(open(path_to_file3,'r'))
list_of_dicts_2013 = json.load(open(path_to_file4,'r'))
list_of_dicts_2014 = json.load(open(path_to_file5,'r'))
list_of_dicts_2015 = json.load(open(path_to_file6,'r'))
list_of_dicts_2016 = json.load(open(path_to_file7,'r'))
list_of_dicts_2017 = json.load(open(path_to_file8,'r'))
list_of_dicts_2018 = json.load(open(path_to_file9,'r'))
list_of_dicts_2019 = json.load(open(path_to_file10,'r'))
list_of_dicts_2020 = json.load(open(path_to_file11,'r'))

len(list_of_dicts_2020)

list_of_dicts_2011[8]

"""Első feladat (Hanga neve)"""

chateknevekkel2011={}
for x in range(len(list_of_dicts_2011)):
    for y in range(len(list_of_dicts_2011)):
        if list_of_dicts_2011[x]['thread_type']=='Regular':
            if list_of_dicts_2011[x]['thread_path']==list_of_dicts_2011[y]['thread_path']:
                chateknevekkel2011.setdefault(list_of_dicts_2011[x]['thread_path'],[]).append(list_of_dicts_2011[x]['sender_name'])

chateknevekkelismetlesnelkul2011={}
for i in range(len(chateknevekkel2011)):
    chateknevekkelismetlesnelkul2011.setdefault(list(set(chateknevekkel2011))[i],[]).append(set(chateknevekkel2011[list(set(chateknevekkel2011))[i]]))

chateknevekkelismetlesnelkul2011

"""Második feladat (jeszk moments)"""

chateknevekkel={}
for x in range(len(list_of_dicts_2018)):
    for y in range(len(list_of_dicts_2018)):
        if list_of_dicts_2018[x]['thread_type']=='RegularGroup':
            if list_of_dicts_2018[x]['thread_path']==list_of_dicts_2018[y]['thread_path']:
                chateknevekkel.setdefault(list_of_dicts_2018[x]['thread_path'],[]).append(list_of_dicts_2018[x]['sender_name'])

chateknevekkelismetlesnelkul2018={}
for i in range(len(chateknevekkel)):
    chateknevekkelismetlesnelkul2018.setdefault(list(set(chateknevekkel))[i],[]).append(set(chateknevekkel[list(set(chateknevekkel))[i]]))

chateknevekkelismetlesnelkul2018_emberekszama={}
for i in range(len(chateknevekkelismetlesnelkul2018)):
    chateknevekkelismetlesnelkul2018_emberekszama.setdefault(list(set(chateknevekkelismetlesnelkul2018))[i],[]).append(len(chateknevekkelismetlesnelkul2018[list(chateknevekkelismetlesnelkul2018)[i]][0]))

chateknevekkelismetlesnelkul2018_emberekszama

"""Negyedik és ötödik feladat (minden évben küldtek üzenetet)"""

kuldoklistája2010=[]
for x in range(len(list_of_dicts_2010)):   
    if list_of_dicts_2010[x]['type']=='Generic':
        kuldoklistája2010.append(list_of_dicts_2010[x]['sender_name'])

kuldoklistája2011=[]
for x in range(len(list_of_dicts_2011)):   
    if list_of_dicts_2011[x]['type']=='Generic':
        kuldoklistája2011.append(list_of_dicts_2011[x]['sender_name'])
        
kuldoklistája2012=[]
for x in range(len(list_of_dicts_2012)):   
    if list_of_dicts_2012[x]['type']=='Generic':
        kuldoklistája2012.append(list_of_dicts_2012[x]['sender_name'])
        
kuldoklistája2013=[]
for x in range(len(list_of_dicts_2013)):   
    if list_of_dicts_2013[x]['type']=='Generic':
        kuldoklistája2013.append(list_of_dicts_2013[x]['sender_name'])
        
kuldoklistája2014=[]
for x in range(len(list_of_dicts_2014)):   
    if list_of_dicts_2014[x]['type']=='Generic':
        kuldoklistája2014.append(list_of_dicts_2014[x]['sender_name'])

kuldoklistája2015=[]
for x in range(len(list_of_dicts_2015)):   
    if list_of_dicts_2015[x]['type']=='Generic':
        kuldoklistája2015.append(list_of_dicts_2015[x]['sender_name'])
        
kuldoklistája2016=[]
for x in range(len(list_of_dicts_2016)):   
    if list_of_dicts_2016[x]['type']=='Generic':
        kuldoklistája2016.append(list_of_dicts_2016[x]['sender_name'])

kuldoklistája2017=[]
for x in range(len(list_of_dicts_2017)):   
    if list_of_dicts_2017[x]['type']=='Generic':
        kuldoklistája2017.append(list_of_dicts_2017[x]['sender_name'])

kuldoklistája2018=[]
for x in range(len(list_of_dicts_2018)):   
    if list_of_dicts_2018[x]['type']=='Generic':
        kuldoklistája2018.append(list_of_dicts_2018[x]['sender_name'])

kuldoklistája2019=[]
for x in range(len(list_of_dicts_2019)):   
    if list_of_dicts_2019[x]['type']=='Generic':
        kuldoklistája2019.append(list_of_dicts_2019[x]['sender_name'])

kuldoklistája2020=[]
for x in range(len(list_of_dicts_2020)):   
    if list_of_dicts_2020[x]['type']=='Generic':
        kuldoklistája2020.append(list_of_dicts_2020[x]['sender_name'])

print(len(set(kuldoklistája2010)))
print(len(set(kuldoklistája2011)))
print(len(set(kuldoklistája2012)))
print(len(set(kuldoklistája2013)))
print(len(set(kuldoklistája2014)))
print(len(set(kuldoklistája2015)))
print(len(set(kuldoklistája2016)))
print(len(set(kuldoklistája2017)))
print(len(set(kuldoklistája2018)))
print(len(set(kuldoklistája2019)))
print(len(set(kuldoklistája2020)))

osszesuzenetkuldo=kuldoklistája2010+kuldoklistája2011+kuldoklistája2012+kuldoklistája2013+kuldoklistája2014+kuldoklistája2015+kuldoklistája2016+kuldoklistája2017+kuldoklistája2018+kuldoklistája2019+kuldoklistája2020

osszesadat=list_of_dicts_2010+list_of_dicts_2011+list_of_dicts_2012+list_of_dicts_2013+list_of_dicts_2014+list_of_dicts_2015+list_of_dicts_2016+list_of_dicts_2017+list_of_dicts_2018+list_of_dicts_2019+list_of_dicts_2020

osszkul=set(osszesuzenetkuldo)

nevekelofordulasa={}
for i in range(len(osszkul)):
    nevekelofordulasa.setdefault(list(osszkul)[i],[]).append(0)

listam=list(osszkul)
listam.sort()

for i in range(len(osszkul)):
    for k in range(len(set(kuldoklistája2010))):
        if listam[i]==list(set(kuldoklistája2010))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2011))):
        if listam[i]==list(set(kuldoklistája2011))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2012))):
        if listam[i]==list(set(kuldoklistája2012))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2013))):
        if listam[i]==list(set(kuldoklistája2013))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2014))):
        if listam[i]==list(set(kuldoklistája2014))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2015))):
        if listam[i]==list(set(kuldoklistája2015))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2016))):
        if listam[i]==list(set(kuldoklistája2016))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2017))):
        if listam[i]==list(set(kuldoklistája2017))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2018))):
        if listam[i]==list(set(kuldoklistája2018))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2019))):
        if listam[i]==list(set(kuldoklistája2019))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    for k in range(len(set(kuldoklistája2020))):
        if listam[i]==list(set(kuldoklistája2020))[k]:
            nevekelofordulasa[listam[i]][0]+=1
    print(i)

nevekelofordulasa

evekszerintimegoszlas={}
uzenet1=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[1]:
        uzenet1.append(listam[i])
evekszerintimegoszlas.setdefault(1,[]).append(len(uzenet1))
uzenet2=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[2]:
        uzenet2.append(listam[i])
evekszerintimegoszlas.setdefault(2,[]).append(len(uzenet2))
uzenet3=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[3]:
        uzenet3.append(listam[i])
evekszerintimegoszlas.setdefault(3,[]).append(len(uzenet3))
uzenet4=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[4]:
        uzenet4.append(listam[i])
evekszerintimegoszlas.setdefault(4,[]).append(len(uzenet4))
uzenet5=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[5]:
        uzenet5.append(listam[i])
evekszerintimegoszlas.setdefault(5,[]).append(len(uzenet5))
uzenet6=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[6]:
        uzenet6.append(listam[i])
evekszerintimegoszlas.setdefault(6,[]).append(len(uzenet6))
uzenet7=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[7]:
        uzenet7.append(listam[i])
evekszerintimegoszlas.setdefault(7,[]).append(len(uzenet7))
uzenet8=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[8]:
        uzenet8.append(listam[i])
evekszerintimegoszlas.setdefault(8,[]).append(len(uzenet8))
uzenet9=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[9]:
        uzenet9.append(listam[i])
evekszerintimegoszlas.setdefault(9,[]).append(len(uzenet9))
uzenet10=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[10]:
        uzenet10.append(listam[i])
evekszerintimegoszlas.setdefault(10,[]).append(len(uzenet10))
uzenet11=[]
for i in range(len(listam)):
    if nevekelofordulasa[listam[i]]==[11]:
        uzenet11.append(listam[i])
evekszerintimegoszlas.setdefault(11,[]).append(len(uzenet11))

evek=[]
evek.append(len(uzenet1))
evek.append(len(uzenet2))
evek.append(len(uzenet3))
evek.append(len(uzenet4))
evek.append(len(uzenet5))
evek.append(len(uzenet6))
evek.append(len(uzenet7))
evek.append(len(uzenet8))
evek.append(len(uzenet9))
evek.append(len(uzenet10))
evek.append(len(uzenet11))

uzenet11

import matplotlib.pyplot as plt

plt.style.use("ggplot")
label = range(1,12)
plt.bar(label,evek)
plt.xticks(range(1,12),list(range(1,12)))

plt.show()

"""Hatodik feladat (atlagosan leghosszabb uzenet)"""

messegekhossza={}
for i in range(len(osszkul)):
    messegekhossza.setdefault(listam[i],[])

for i in range(len(osszesadat)):
    if osszesadat[i]['type']=='Generic':
        for k in range(len(listam)):
            if osszesadat[i]['sender_name']==listam[k]:
                messegekhossza.setdefault(listam[k],[]).append(osszesadat[i]['content_l'])
        print(i)

hosszatlagok={}
for i in range(len(osszkul)):
    hosszatlagok.setdefault(listam[i],[])

for i in range(len(osszkul)):
    hosszatlagok[listam[i]]=sum(messegekhossza[listam[i]])/len(messegekhossza[listam[i]])

max(hosszatlagok.values())

for i in range(len(listam)):
    if hosszatlagok[listam[i]]==1323.0:
        print(listam[i])

{k: v for k, v in sorted(hosszatlagok.items(), key=lambda item: item[1])}

"""Hetedik feladat (legtobb chatbenbentlévő)"""

chateknevekkelossz={}
chateknevekkelosszlista1=[]
for i in range(len(osszesadat)):
    chateknevekkelossz.setdefault(osszesadat[i]['thread_path'],[])
    chateknevekkelosszlista1.append(osszesadat[i]['thread_path'])

chateknevekkelossz=dict(sorted(chateknevekkelossz.items()))

chateknevekkelosszlista=sorted(list(set(chateknevekkelosszlista1)))

for y in range(len(osszesadat)):
    for x in range(len(chateknevekkelosszlista)):
        if chateknevekkelosszlista[x]==osszesadat[y]['thread_path']:
            chateknevekkelossz.setdefault(chateknevekkelosszlista[x],[]).append(osszesadat[y]['sender_name'])   
    print(y)

for y in range(len(osszesadat)):
    for x in range(len(chateknevekkelosszlista)):
        if chateknevekkelosszlista[x]==osszesadat[y]['thread_path']:
            for i in range(len(osszesadat[y]['reactions'])):
                chateknevekkelossz.setdefault(chateknevekkelosszlista[x],[]).append(osszesadat[y]['reactions'][i])   
    print(y)

for y in range(len(osszesadat)):
    if osszesadat[y]['type']=='Subscribe':
        for x in range(len(chateknevekkelosszlista)):
            if chateknevekkelosszlista[x]==osszesadat[y]['thread_path']:
                for i in range(len(osszesadat[y]['users'])):
                    chateknevekkelossz.setdefault(chateknevekkelosszlista[x],[]).append(osszesadat[y]['users'][i])   
    print(y)

chateknevekkelosszismetlesnelkul={}
for i in range(len(chateknevekkelossz)):
    chateknevekkelosszismetlesnelkul.setdefault(list(set(chateknevekkelossz))[i],[]).append(set(chateknevekkelossz[list(set(chateknevekkelossz))[i]]))

chateknevekkelosszismetlesnelkul

szineszek={}
szineszeklista1=[]
for i in range(len(osszesadat)):
    szineszek.setdefault(osszesadat[i]['sender_name'],[])
    szineszeklista1.append(osszesadat[i]['sender_name'])

szineszek=dict(sorted(szineszek.items()))

szineszeklista=sorted(list(set(szineszeklista1)))

for i in range(len(osszesadat)):
    for j in range(len(osszesadat[i]['reactions'])):
        szineszek.setdefault(osszesadat[i]['reactions'][j],[])
        szineszeklista1.append(osszesadat[i]['reactions'][j])

for i in range(len(osszesadat)):
    if osszesadat[i]['type']=='Subscribe':
        for j in range(len(osszesadat[i]['users'])):
            szineszek.setdefault(osszesadat[i]['users'][j],[])
            szineszeklista1.append(osszesadat[i]['users'][j])

for i in range(len(szineszeklista)):
    szineszek.setdefault(szineszeklista[i],[]).append(0)

for k in range(len(szineszeklista)):
    for i in range(len(chateknevekkelosszismetlesnelkul)):
        for j in range(len(chateknevekkelosszismetlesnelkul[i])):
            if szineszeklista[k]==list(chateknevekkelosszismetlesnelkul[i][0])[j]:
                szineszek[szineszeklista[k]][0]+=1

{k: v for k, v in sorted(szineszek.items(), key=lambda item: item[1])}

"""Nyolcadik feladat (legtobb eltelt ido ket uzenetkozott)"""

messagekideje={}
messagekidejelista1=[]
for i in range(len(osszesadat)):
    messagekideje.setdefault(osszesadat[i]['thread_path'],[])
    messagekidejelista1.append(osszesadat[i]['thread_path'])

messagekideje=dict(sorted(messagekideje.items()))
messagekidejelista=sorted(list(set(messagekidejelista1)))

messagekideje

for y in range(len(osszesadat)):
    for x in range(len(messagekidejelista)):
        if messagekidejelista[x]==osszesadat[y]['thread_path']:
            messagekideje.setdefault(messagekidejelista[x],[]).append(osszesadat[y]['timestamp_ms'])   
    print(y)

for i in range(len(messagekideje)):
    messagekideje[i]=sorted(messagekideje[i])

idokulonbsegek={}
for i in range(len(messagekideje)):
    for j in range(len(messagekideje[i])):
        if j==len(messagekideje[i])-1:
            break
        idokulonbsegek.setdefault(i,[]).append(messagekideje[i][j+1]-messagekideje[i][j])

keyeklistaja=list(idokulonbsegek.keys())

for i in range(len(idokulonbsegek)):
    vmi=sorted(idokulonbsegek[keyeklistaja[i]])
    vmi.reverse()
    idokulonbsegek[keyeklistaja[i]]=vmi

legnagyobbidokulonbségek={}
for i in range(len(idokulonbsegek)):
    legnagyobbidokulonbségek.setdefault(keyeklistaja[i],[]).append(idokulonbsegek[keyeklistaja[i]][0])

{k: v for k, v in sorted(legnagyobbidokulonbségek.items(), key=lambda item: item[1])}

"""Második definicos (legkevesbe aktiv ora)"""

def Orakaktivitasa(x):
    orakaktivitasa={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0}
    orakaktivitasalista1=[]
    for l in range(len(osszesadat)):
        if x>=osszesadat[l]['timestamp_ms']:
            orakaktivitasalista1.append(osszesadat[l]['hour'])
    orakaktivitasa=dict(sorted(orakaktivitasa.items()))
    for i in range(len(orakaktivitasa)):
        orakaktivitasa[i]=orakaktivitasalista1.count(i)
    ertek=0
    erteklista=[]
    for k in range(len(orakaktivitasa)):
        if orakaktivitasa[ertek]>orakaktivitasa[k]:
            ertek=k
        erteklista.append(orakaktivitasa[k])
    ertekek=sorted(erteklista)
    ertekekoraja=[]
    for k in range(len(ertekek)):
        for i in range(len(orakaktivitasa)):
            if ertekek[k]==orakaktivitasa[i]:
                ertekekoraja.append(i)
    print(orakaktivitasa)
    return ertekek

Orakaktivitasa(1293114321000)

"""Harmadik definicios (ki mennyi karaktert irt)"""

def Karakterekszama(x,ember):
    messegekhossza={}
    for i in range(len(listam)):
        messegekhossza.setdefault(listam[i],[])
    for i in range(len(listam)):
        if ember==listam[i]:
            k=i
    for i in range(len(osszesadat)):
        if x>=osszesadat[i]['timestamp_ms']:
            if osszesadat[i]['type']=='Generic':
                if osszesadat[i]['sender_name']==ember:
                    messegekhossza.setdefault(listam[k],[]).append(osszesadat[i]['content_l'])
    return sum(messegekhossza[ember])

"""Ötödik definicios"""

def TOP5legaktivabb(x):
    chatekuzenetszama1={}
    chatekuzenetszama1lista=[]
    for i in range(len(messagekideje)):
        for j in range(len(messagekideje[i])):
            if messagekideje[i][j]<=x:
                chatekuzenetszama1.setdefault(i,[]).append(messagekideje[i][j])
                chatekuzenetszama1lista.append(i)
    chatekuzenetszama1lista=sorted(list(set(chatekuzenetszama1lista)))
    chatekuzenetszama={}
    for i in range(len(chatekuzenetszama1)):
        chatekuzenetszama.setdefault(chatekuzenetszama1lista[i],[]).append(len(chatekuzenetszama1[chatekuzenetszama1lista[i]]))
    ertek=0
    erteklista=[]
    for k in range(len(chatekuzenetszama)):
        if chatekuzenetszama[chatekuzenetszama1lista[ertek]]<chatekuzenetszama[chatekuzenetszama1lista[k]]:
            ertek=k
        erteklista.append(chatekuzenetszama[chatekuzenetszama1lista[k]])
    for i in range(len(erteklista)):
        erteklista[i]=erteklista[i][0]
    ertekek=sorted(list(set(erteklista)))
    ertekek.reverse()
    ertekek1=ertekek[:5]
    ertekek1.reverse()
    eredmenyek=[]
    for k in range(len(ertekek1)):
        for i in range(len(chatekuzenetszama)):
            if ertekek1[k]==chatekuzenetszama[chatekuzenetszama1lista[i]][0]:
                eredmenyek.append(chatekuzenetszama1lista[i])
    eredmenyek.reverse()
    return eredmenyek

"""Nyolcadik definicios (adott ora)"""

def Orabanatlag(x):
    orakaktivitasa={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0}
    orakaktivitasalista1=[]
    for l in range(len(osszesadat)):
        orakaktivitasalista1.append(osszesadat[l]['hour'])
    orakaktivitasa=dict(sorted(orakaktivitasa.items()))
    for i in range(len(orakaktivitasa)):
        orakaktivitasa[i]=orakaktivitasalista1.count(i)/3677
    print(orakaktivitasa)
    return orakaktivitasa[x]

Orabanatlag(10)

listamm=[]
for i in range(len(list_of_dicts_2010)):
    listamm.append(list_of_dicts_2010[i]['timestamp_ms'])
    
listammm=[]
for i in range(len(list_of_dicts_2020)):
    listammm.append(list_of_dicts_2020[i]['timestamp_ms'])
    
print(sorted(listamm)[0])
print(sorted(listammm)[-1])

k=0
for i in range(len(list_of_dicts_2010)):
    if list_of_dicts_2010[i]['timestamp_ms']==1269556341000:
        k=i
l=0
for i in range(len(list_of_dicts_2020)):
    if list_of_dicts_2020[i]['timestamp_ms']==1587230400447:
        l=i
#3677 nap telt el kozottuk

# Commented out IPython magic to ensure Python compatibility.
#Melyik a 2019-es db cset?
import json
list_of_dicts_2019 = json.load(open(path_to_file10,'r'))
type(list_of_dicts_2019)
list
list_of_dicts_2019
import matplotlib.pyplot as plt
# %matplotlib inline


csoportok = {} 


for dic in list_of_dicts_2019:
    if dic['thread_type'] == 'RegularGroup':
        if dic['thread_path'] not in csoportok:
            csoportok[dic['thread_path']] = [ dic['sender_name'] ]
    else:
        if dic['sender_name'] not in csoportok[dic['thread_path']]:
            csoportok[dic['thread_path']].append(dic['sender_name'])
print(csoportok)
dibicset = []
for key, value in csoportok.items():
    if len(value) == 13:
        dibicset.append(key)
print(dibicset)

felvettekszama = {}
for dic in list_of_dicts_2019:
    if dic['thread_path'] == 797:
        if dic['type'] == 'Subscribe':
            felvettekszama[dic['sender_name']] = [dic['users']]
            print(dic['users'])
dbtagok = []
for dic in list_of_dicts_2019:
    if dic['thread_path'] == 797:
        if dic['sender_name'] not in dbtagok:
            dbtagok.append(dic['sender_name'])
print(dbtagok)

#Ki lépett ki a legtöbbször a Jeszkmomentsből?
#(Szerintem itt azt az egy dolgot érdemes az adatoknál elmondani, hogy a subscribe/unsubscribe-nál hogy van megjelölve az aki kilép és az aki kilépteti/felveszi, de ez egy plusz feladat volt, szóval lehet nem annyira releváns)

import json
path_to_file = '2018-msg.json'
list_of_dicts_2018 = json.load(open(path_to_file,'r'))
type(list_of_dicts_2018)
list_of_dicts_2018
list

moments = {}
for dic in list_of_dicts_2018:
    if dic['thread_path'] == 494:
        if dic['type'] == 'Unsubscribe':
            if dic['index'] not in moments:
                moments [dic['index']] = dic['sender_name']
print(moments)
#kilepok = {}
#for dic in moments:
  #if dic['type'] == 'Unsubscribe':
    #kilepok [dic['index']] = dic['sender_name']
#print(kilepok)
kilepok = dict(sorted(moments.items()))
print(kilepok)
nevek = list(moments.values())

import json
path_to_file = '2019-msg.json'
list_of_dicts_2019 = json.load(open(path_to_file,'r'))
type(list_of_dicts_2019)
list_of_dicts_2019
list

moments2019 = {}
for dic in list_of_dicts_2019:
    if dic['thread_path'] == 494:
        if dic['type'] == 'Unsubscribe':
            if dic['index'] not in moments2019:
                moments2019 [dic['index']] = dic['sender_name']
print(moments2019)
nevek19 = list(moments2019.values())

import json
path_to_file = '2017-msg.json'
list_of_dicts_2017 = json.load(open(path_to_file,'r'))
type(list_of_dicts_2017)
list_of_dicts_2017
list

moments17 = {}
for dic in list_of_dicts_2017:
    if dic['thread_path'] == 494:
        if dic['type'] == 'Unsubscribe':
            if dic['index'] not in moments17:
                moments17 [dic['index']] = dic['sender_name']
print(moments17)
nevek17 = list(moments17.values())

import json
path_to_file = '2020-msg.json'
list_of_dicts_2020 = json.load(open(path_to_file,'r'))
type(list_of_dicts_2020)
list_of_dicts_2020
list

moments20 = {}
for dic in list_of_dicts_2020:
    if dic['thread_path'] == 494:
        if dic['type'] == 'Unsubscribe':
            if dic['index'] not in moments20:
                moments20 [dic['index']] = dic['sender_name']
print(moments20)
nevek20 = list(moments20.values())

for i in nevek19:
    nevek.append(i)

for i in nevek17:
    nevek.append(i)

for i in nevek20:
    nevek.append(i)

nevek.sort()
print(nevek)
[[x,nevek.count(x)] for x in set(nevek)]

"""Rausz mas modon nevezte el az adatokat:"""

path_to_file = 'data/2010-msg.json'
list_of_dicts_2010 = json.load(open(path_to_file,'r'))
list_of_dicts_2010 = sorted(list_of_dicts_2010,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2011-msg.json'
list_of_dicts_2011 = json.load(open(path_to_file,'r'))
len(list_of_dicts_2011)
list_of_dicts_2011 = sorted(list_of_dicts_2011,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2012-msg.json'
list_of_dicts_2012 = json.load(open(path_to_file,'r'))
len(list_of_dicts_2012)
list_of_dicts_2012 = sorted(list_of_dicts_2012,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2013-msg.json'
list_of_dicts_2013 = json.load(open(path_to_file,'r'))
list_of_dicts_2013 = sorted(list_of_dicts_2013,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2014-msg.json'
list_of_dicts_2014 = json.load(open(path_to_file,'r'))
list_of_dicts_2014 = sorted(list_of_dicts_2014,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2015-msg.json'
list_of_dicts_2015 = json.load(open(path_to_file,'r'))
list_of_dicts_2015 = sorted(list_of_dicts_2015,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2016-msg.json'
list_of_dicts_2016 = json.load(open(path_to_file,'r'))
list_of_dicts_2016 = sorted(list_of_dicts_2016,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2017-msg.json'
list_of_dicts_2017 = json.load(open(path_to_file,'r'))
list_of_dicts_2017 = sorted(list_of_dicts_2017,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2018-msg.json'
list_of_dicts_2018 = json.load(open(path_to_file,'r'))
list_of_dicts_2018 = sorted(list_of_dicts_2018,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2019-msg.json'
list_of_dicts_2019 = json.load(open(path_to_file,'r'))
list_of_dicts_2019 = sorted(list_of_dicts_2019,key = lambda i: i['timestamp_ms'])
path_to_file = 'data/2020-msg.json'
list_of_dicts_2020 = json.load(open(path_to_file,'r'))
list_of_dicts_2020 = sorted(list_of_dicts_2020,key = lambda i: i['timestamp_ms'])
list_of_dicts_full = list_of_dicts_2010 + list_of_dicts_2011 + list_of_dicts_2012 + list_of_dicts_2013 + list_of_dicts_2014 + list_of_dicts_2015 + list_of_dicts_2016 + list_of_dicts_2017 + list_of_dicts_2018 + list_of_dicts_2019 + list_of_dicts_2020
list_of_dicts_full = sorted(list_of_dicts_full,key = lambda i: i['timestamp_ms'])

#megadok egy timestamp-et és egy csetet (thread_id), összesen hány különböző ember, hány üzenetben, hány karaktert írt eddig az időpontig (4 pont)
#a maximumba sajnos belebuktam, de manualisan ki tudtuk / ki lehet keresni :DD

def fv3(lista,timestamp):

    list_of_dicts = []
    #list_of_dicts = lista
    sorted_list = []

    sorted_list = list(filter(lambda i: i['timestamp_ms'] < timestamp, lista))
    #sorted_list_v2 = list(filter(lambda i: i['thread_path'] == thread_id, sorted_list))

    csoportok_lista = []

    for i in range(0,len(sorted_list)-1):
        csoportok_lista.append(sorted_list[i]['thread_path'])

    csoportok_lista
    csoportok_ismetles_nelkul = list(dict.fromkeys(csoportok_lista))

    osszesites = {}
    #osszes_uzenet = []


    for j in csoportok_ismetles_nelkul:
        osszesites[j] = {} 

    for s in sorted_list:
        if s['sender_name'] in osszesites[s['thread_path']].keys():

            osszesites[s['thread_path']][s['sender_name']] += s['content_l']

        else:
            osszesites[s['thread_path']][s['sender_name']] = s['content_l']


    return osszesites

fv3(list_of_dicts_full,1293114321000)
#lista = []
#lista_v2 = []
#csoportok = []


#for key in osszesites.values():
#    lista.append(key)


#for csoport in osszesites.keys():
#    csoportok.append(csoport)

#lista[0]

#maximumok = []
#for m in range(0,len(lista)):
#    maximumok.append(sorted(lista[m]))

#maximumok

#a1 = {'a':1, 'b':13, 'd':4, 'c':2, 'e':30}
#a1_sorted_keys = sorted(a1, key=a1.get, reverse=True)
#for r in a1_sorted_keys:
#    print(r, a1[r])
#stats = {'a':1000, 'b':3000, 'c': 100}


       # osszesites['csoport'] = 
       # osszesites['kuldo'] = ['sender_name']
       # osszesites['karakter_szam'] = ['content_l']
       # osszes_uzenet.append(osszesites.copy())
       # osszesites = {}

#megadok egy timestamp-et, ki az eddig az időpontig írt leghosszabb üzenet szerzője? (1 pont) - legnagyobb content_l


def leghosszabb_uzenet(lista,timestamp):
    list_of_dicts = []
    list_of_dicts = lista
    sorted_list = []

    sorted_list = list(filter(lambda i: i['timestamp_ms'] < timestamp, lista))
    #sorted_list_v2 = list(filter(lambda i: i['thread_path'] == thread_id, sorted_list))

    csoportok_lista = []

    for i in range(0,len(sorted_list)-1):
        csoportok_lista.append(sorted_list[i]['sender_name'])

    csoportok_lista
    csoportok_ismetles_nelkul = list(dict.fromkeys(csoportok_lista))


    kuldo_neve = ''
    karakter_szam = 0
    vissz_ertek = []
    osszes_uzenet = []
    osszesites = {}


    for j in csoportok_ismetles_nelkul:
        for i in range(0,len(sorted_list)-1):

            if sorted_list[i]['sender_name'] == j:
                kuldo_neve = sorted_list[i]['sender_name']
                karakter_szam = sorted_list[i]['content_l']

                #osszesites = [j,kuldo_neve,karakter_szam]
                osszesites = [j,kuldo_neve,karakter_szam]

                osszes_uzenet.append(osszesites)

                karakter_szam = 0
                kuldo_neve = ''

    osszes_uzenet.sort(key = lambda x: x[2], reverse = True)
    
    return osszes_uzenet
    
leghosszabb_uzenet(list_of_dicts_full,1293114321000)
    
    #{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}
    #leghosszabb_uzenet = sorted(osszes_uzenet,key = lambda i: i['karakter_szam'], descending = True)

#megadok egy timestamp-et, melyik csetbe és kicsoda írta eddig az időpontig a legtöbb karaktert (5 pont

def fv1(lista,timestamp,thread_id):

    list_of_dicts = []
    list_of_dicts = lista
    sorted_list = []

    #while list_of_dicts_full[i]['timestamp_ms']

    sorted_list = list(filter(lambda i: i['timestamp_ms'] < timestamp, list_of_dicts))
    sorted_list_v2 = list(filter(lambda i: i['thread_path'] == thread_id, sorted_list))

    nevek_lista = []

    for i in range(0,len(sorted_list_v2)-1):
        nevek_lista.append(sorted_list_v2[i]['sender_name'])

    nevek_lista
    ismetles_nelkul = list(dict.fromkeys(nevek_lista))

    #vegso_nevek = dict((nev,[0,0]) for nev in nevek_lista)
    #vegso_nevek

    uzenet_szam = 0
    karakter_szam = 0
    vissz_ertek = []

    for j in ismetles_nelkul:
        for i in range(0,len(sorted_list_v2)-1):

            if sorted_list_v2[i]['sender_name'] == j:
                uzenet_szam += 1
                karakter_szam += sorted_list_v2[i]['content_l']

        osszesites = [j,uzenet_szam,karakter_szam]
        uzenet_szam = 0
        karakter_szam = 0

        vissz_ertek.append(osszesites)

    return vissz_ertek

fv1(list_of_dicts_full,1293114321000,237)

#A = dict(zip(['one','two','three'],l))